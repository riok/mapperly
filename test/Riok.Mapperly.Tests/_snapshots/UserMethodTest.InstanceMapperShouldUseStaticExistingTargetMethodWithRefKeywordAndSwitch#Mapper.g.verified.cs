//HintName: Mapper.g.cs
// <auto-generated />
#nullable enable
public partial class Mapper
{
    [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "0.0.1.0")]
    public static partial void Update(this global::A dest, global::A src)
    {
        switch (src, dest)
        {
            case (global::B source, global::B target):
                target.BValue = source.BValue;
                var targetRef = target.Value;
                MapList(ref targetRef, source.Value);
                target.Value = targetRef;
                break;
            case (global::C source, global::C target):
                target.CValue = source.CValue;
                var targetRef1 = target.Value;
                MapList(ref targetRef1, source.Value);
                target.Value = targetRef1;
                break;
            default:
                throw new global::System.ArgumentException($"Cannot map {src.GetType()} to {dest.GetType()} as there is no known derived type mapping", nameof(src));
        }
    }
}
