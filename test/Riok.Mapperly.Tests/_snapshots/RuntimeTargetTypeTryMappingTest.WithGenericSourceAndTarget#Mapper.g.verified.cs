//HintName: Mapper.g.cs
// <auto-generated />
#nullable enable
public partial class Mapper
{
    [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "0.0.1.0")]
    public partial bool TryMap<TSource, TTarget>(global::System.Linq.IQueryable<TSource> source, out global::System.Linq.IQueryable<TTarget> result)
    {
        result = default;
        switch (source)
        {
            case global::System.Linq.IQueryable<global::A> x when typeof(bool).IsAssignableFrom(typeof(global::System.Linq.IQueryable<global::B>)):
                result = (global::System.Linq.IQueryable<TTarget>)(object)ProjectToB(x);
                return true;
            case global::System.Linq.IQueryable<global::C> x when typeof(bool).IsAssignableFrom(typeof(global::System.Linq.IQueryable<global::D>)):
                result = (global::System.Linq.IQueryable<TTarget>)(object)ProjectToD(x);
                return true;
            default:
                return false;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "0.0.1.0")]
    private partial global::System.Linq.IQueryable<global::B> ProjectToB(global::System.Linq.IQueryable<global::A> q)
    {
#nullable disable
        return global::System.Linq.Queryable.Select(
            q,
            x => new global::B()
            {
                Value = x.Value,
            }
        );
#nullable enable
    }

    [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "0.0.1.0")]
    private partial global::System.Linq.IQueryable<global::D> ProjectToD(global::System.Linq.IQueryable<global::C> q)
    {
#nullable disable
        return global::System.Linq.Queryable.Select(
            q,
            x => new global::D()
            {
                Value2 = x.Value2,
            }
        );
#nullable enable
    }
}