//HintName: Mapper.g.cs
// <auto-generated />
#nullable enable
public partial class Mapper
{
    [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "0.0.1.0")]
    public partial global::BBase Map(global::ABase src)
    {
        return src switch
        {
            global::A x => MapToB(x),
            _ => throw new global::System.ArgumentException($"Cannot map {src.GetType()} to BBase as there is no known derived type mapping", nameof(src)),
        };
    }

    [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "0.0.1.0")]
    private global::B MapToB(global::A source)
    {
        var target = new global::B()
        {
            Objects = MapToListOfBBase(source.Objects),
        };
        return target;
    }

    [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "0.0.1.0")]
    private global::System.Collections.Generic.List<global::BBase?> MapToListOfBBase(global::System.Collections.Generic.IReadOnlyCollection<global::ABase> source)
    {
        var target = new global::System.Collections.Generic.List<global::BBase?>(source.Count);
        foreach (var item in source)
        {
            target.Add(Map(item));
        }
        return target;
    }
}