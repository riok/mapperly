//HintName: Mapper.g.cs
// <auto-generated />
#nullable enable
public static partial class Mapper
{
    [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "0.0.1.0")]
    public static partial global::System.Linq.IQueryable<global::VendorResponse> ProjectToDto(this global::System.Linq.IQueryable<global::Vendor> query)
    {
#nullable disable
        return global::System.Linq.Queryable.Select(
            query,
            x => new global::VendorResponse()
            {
                VendorName = x.VendorName,
                Countries = global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(x.Countries, x => new global::CountryListResponse()
                {
                    Code = x.Country.Code,
                    Name = global::System.Linq.Enumerable.FirstOrDefault(x.Country.LocalizedNames)!.Name ?? x.Country.Name,
                })),
            }
        );
#nullable enable
    }

    [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "0.0.1.0")]
    public static partial global::System.Linq.IQueryable<global::ScopeResponse> ProjectToDto(this global::System.Linq.IQueryable<global::Scope> q)
    {
#nullable disable
        return global::System.Linq.Queryable.Select(
            q,
            x => new global::ScopeResponse()
            {
                Id = x.Id,
                Countries = global::System.Linq.Enumerable.ToList(global::System.Linq.Enumerable.Select(x.Countries, c => new global::CountryListResponse()
                {
                    Code = c.Country.Code,
                    Name = global::System.Linq.Enumerable.FirstOrDefault(c.Country.LocalizedNames)!.Name ?? c.Country.Name,
                })),
            }
        );
#nullable enable
    }

    [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "0.0.1.0")]
    public static partial global::CountryListResponse ToCountryListDto(this global::Country q)
    {
        var target = new global::CountryListResponse()
        {
            Code = q.Code,
            Name = GetCountryLocalizedName(q),
        };
        return target;
    }
}